<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd">

       <!--<context:property-placeholder ignore-resource-not-found="true" location="classpath*:*properties"/>-->

       <bean id="propertyConfigurer"  class="com.apin.utils.CustomPropertyConfigurer">
              <property name="locations">
                     <list>
                            <value>classpath*:sys.properties</value>
                     </list>
              </property>
              <property name="ignoreResourceNotFound" value="true"/>
              <property name="ignoreUnresolvablePlaceholders" value="true"/>
       </bean>

       <context:component-scan base-package="com.apin">
              <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
       </context:component-scan>

       <bean id="myJobFactory" class="com.apin.third.service.timer.MyJobFactory">
       </bean>

       <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
              <property name="maxIdle" value="300"/> <!--最大能够保持idel状态的对象数-->
              <property name="maxTotal" value="60000"/><!--最大分配的对象数-->
              <property name="testOnBorrow" value="true"/><!--当调用borrow Oject方法时，是否进行有效性检查-->
       </bean>

       <bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="close">
              <constructor-arg index="0" ref="jedisPoolConfig"/>
              <constructor-arg index="1" value="${redis.host}"/>
              <constructor-arg index="2" value="${redis.port}" type="int"/>
              <constructor-arg index="3" value="${redis.timeout}" type="int"/>
              <constructor-arg index="4" value="${redis.auth}"/>
       </bean>

       <bean id="apinJdbcTemplate" class="com.apin.common.jdbc.ApinJdbcTemplate">
              <property name="dataSource" ref="masterDataSource"></property>
       </bean>

       <!-- DataSource数据源模板 -->
       <bean id="parentDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
              <!-- 指定连接池中保留的最大连接数. Default:100-->
              <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
              <!-- 指定连接池中保留的最小连接数-->
              <property name="minPoolSize" value="${jdbc.minPoolSize}"/>
              <!-- 指定连接池的初始化连接数  取值应在minPoolSize 与 maxPoolSize 之间.Default:3-->
              <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>
              <!-- 最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。 Default:0-->
              <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>
              <!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数. Default:3-->
              <property name="acquireIncrement" value="${jdbc.acquireIncrement}"/>
              <!-- JDBC的标准,用以控制数据源内加载的PreparedStatements数量。
              但由于预缓存的statements属于单个connection而不是整个连接池所以设置这个参数需要考虑到多方面的因数.如果maxStatements与maxStatementsPerConnection均为0,则缓存被关闭。Default:0-->
              <property name="maxStatements" value="${jdbc.maxStatements}"/>
              <!-- 每60秒检查所有连接池中的空闲连接.Default:0 -->
              <property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}"/>
       </bean>

       <bean id="masterDataSource" parent="parentDataSource">
              <property name="driverClass" value="${master.jdbc.driverClass}"></property>
              <property name="jdbcUrl" value="${master.jdbc.jdbcUrl}"></property>
              <property name="user" value="${master.jdbc.username}"></property>
              <property name="password" value="${master.jdbc.password}"></property>
       </bean>

       <bean id="batchDataSource" parent="parentDataSource">
              <property name="driverClass" value="${batch.jdbc.driverClass}"></property>
              <property name="jdbcUrl" value="${batch.jdbc.jdbcUrl}"></property>
              <property name="user" value="${batch.jdbc.username}"></property>
              <property name="password" value="${batch.jdbc.password}"></property>
       </bean>

       <bean id="dozerBeanMapper" class="org.dozer.DozerBeanMapper"></bean>


</beans>