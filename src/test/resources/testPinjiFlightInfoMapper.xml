<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd">

       <context:property-placeholder location="classpath:testPinjiFlightInfoMapper.properties" />

       <bean id="parentDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
              <!-- 指定连接池中保留的最大连接数. Default:100-->
              <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
              <!-- 指定连接池中保留的最小连接数-->
              <property name="minPoolSize" value="${jdbc.minPoolSize}"/>
              <!-- 指定连接池的初始化连接数  取值应在minPoolSize 与 maxPoolSize 之间.Default:3-->
              <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>
              <!-- 最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。 Default:0-->
              <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>
              <!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数. Default:3-->
              <property name="acquireIncrement" value="${jdbc.acquireIncrement}"/>
              <!-- JDBC的标准,用以控制数据源内加载的PreparedStatements数量。
              但由于预缓存的statements属于单个connection而不是整个连接池所以设置这个参数需要考虑到多方面的因数.如果maxStatements与maxStatementsPerConnection均为0,则缓存被关闭。Default:0-->
              <property name="maxStatements" value="${jdbc.maxStatements}"/>
              <!-- 每60秒检查所有连接池中的空闲连接.Default:0 -->
              <property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}"/>
       </bean>

       <bean id="dataSource" parent="parentDataSource">
              <property name="driverClass" value="${master.jdbc.driverClass}"></property>
              <property name="jdbcUrl" value="${master.jdbc.jdbcUrl}"></property>
              <property name="user" value="${master.jdbc.username}"></property>
              <property name="password" value="${master.jdbc.password}"></property>
       </bean>


       <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
              <property name="dataSource" ref="dataSource" />
       </bean>

       <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
              <property name="configLocation" value="classpath:mybatis-config.xml" />
              <property name="dataSource" ref="dataSource" />
       </bean>

       <!--mapper bean -->
       <bean id="pinjiFlightInfoMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
              <property name="mapperInterface" value="com.apin.special.ticket.dao.PinjiFlightInfoMapper" />
              <property name="sqlSessionFactory" ref="sqlSessionFactory" />
       </bean>

       <bean id="classMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
              <property name="mapperInterface" value="com.apin.special.ticket.dao.ClassMapper"/>
              <property name="sqlSessionFactory" ref="sqlSessionFactory" />
       </bean>


</beans>